---
###
# This is an example for "normal" people that don't need developer tools
#
###

# roles
role_ssh: no
role_sys: no
role_cfg: no
role_ansible: true
role_pip: yes
role_brew: yes
role_app: no

## system configuration (requires sudo)
system:
#  # set ComputerName, HostName and NetBIOS Name
#  hostname: example
  # sudo systemsetup -help
  systemsetup:
#    - { key: "-setrestartfreeze", value: "on" }
#    - { key: "-setdisplaysleep", value: "10" }
  loginwindow:
#    - { key: "AdminHostInfo", value: "HostName" }
#    - { key: "GuestEnabled", value: "0" }
  generic:
#    - { domain: "/Library/Preferences/com.apple.loginwindow", key: "AdminHostInfo", type: string, value: "HostName" }
#    - { domain: "/Library/Preferences/com.apple.loginwindow", key: "GuestEnabled", type: bool, value: 0 }

## user configuration (must be run per user)
config:
  # domain = NSGlobalDomain
  global:
#    - { key: "InitialKeyRepeat", type: int, value: 15 }
#    - { key: "KeyRepeat", type: int, value: 1 }
  generic:
#    - { domain: "com.apple.desktopservices", key: "DSDontWriteNetworkStores", type: bool, value: 1 }
  # domain = com.apple.finder
  finder:
    # available views: `icnv`, `clmv`, `Flwv`, `Nlsv`
    - { key: "FXPreferredViewStyle", type: string, value: "Nlsv" }
  # domain = com.apple.dock
  dock:
    # https://github.com/mathiasbynens/dotfiles/blob/c886e139233320e29fd882960ba3dd388d57afd7/.macos#L356
#    - { key: "magnification", type: int, value: 1 }
#    - { key: "tilesize", type: int, value: 32 }
#    - { key: "largesize", type: int, value: 128 }
#    - { key: "autohide", type: int, value: 1 }
    # hot corners: tl = top-left, br = bottom-right
#    - { key: "wvous-tl-corner", type: int, value: 5 }
#    - { key: "wvous-tl-modifier", type: int, value: 0 }
#    - { key: "wvous-tr-corner", type: int, value: 11 }
#    - { key: "wvous-tr-modifier", type: int, value: 0 }
#    - { key: "wvous-bl-corner", type: int, value: 3 }
#    - { key: "wvous-bl-modifier", type: int, value: 0 }
#    - { key: "wvous-br-corner", type: int, value: 2 }
#    - { key: "wvous-br-modifier", type: int, value: 0 }

## user files and templates:
# overwrite: replace file on target, if it exists
# shell: source file in .profile

# files you want to copy to the target
#files:
  #- { name: "gitconfig-example", path: "$HOME/.gitconfig-example", overwrite: true }

# templates you want to copy to the target
#templates:
  #- { name: "bashrc-example", path: "$HOME/.bashrc-example", overwrite: true }
  #- { name: "bash_aliases-example", path: "$HOME/.bash_aliases-example", overwrite: true, source: "interactive" }

# instead of copying a file or template, you can define aliases one by one
shell_aliases:
  - { name: "updatemac", cmd: "(cd {{playbook_dir}}; ansible-playbook macdev.yml)" }

brew_packages:
  - { name: python, path: "{{ brew_bin }}/python3" }
  #- { name: pwgen, path: "{{ brew_bin }}/pwgen" }
  #- { name: jq, path: "{{ brew_bin }}/jq" }
  #- { name: gnupg, path: "{{ brew_bin }}/gpg" }
  #- { name: bash-completion, path: /usr/local/etc/profile.d/bash_completion.sh }
  #- { name: kubernetes-cli, path: "{{ brew_bin }}/kubectl" }
  #- { name: kubectx, path: "{{ brew_bin }}/kubectx" }
  #- { name: hub, path: "{{ brew_bin }}/hub" }
  #- { name: go, path: "{{ brew_bin }}/go" }
  #- { name: go@1.12, path: /usr/local/Cellar/go@1.12 }
  #- { name: pinentry-mac, path: "{{ brew_bin }}/pinentry-mac" }
  #- { name: node, path: "{{ brew_bin }}/node" }
  #- { name: telegraf, path: "{{ brew_bin }}/telegraf" }
  #- { name: mtr, path: "{{ brew_sbin }}/mtr" }
  - { name: smartmontools, path: "{{ brew_bin }}/smartctl" }
  #- { name: glances, path: "{{ brew_bin }}/glances" }
  #- { name: ask-cli, path: "{{ brew_bin }}/ask" }
  #- { name: zsh, path: "{{ brew_bin }}/zsh" }
  #- { name: zsh-syntax-highlighting, path: /usr/local/share/zsh-syntax-highlighting }
  #- { name: zsh-autosuggestions, path: /usr/local/share/zsh-autosuggestions }

brew_cask_packages:
  #- { name: docker, path: "/Applications/Docker.app" }
  - { name: iterm2, path: "/Applications/iTerm.app" }
  - { name: google-chrome, path: "/Applications/Google Chrome.app" }
  #- { name: atom, path: "/Applications/Atom.app" }
  #- { name: postman, path: "/Applications/Postman.app" }
  - { name: slack, path: "/Applications/Slack.app" }
  - { name: macpass, path: "/Applications/MacPass.app" }
  - { name: openoffice, path: "/Applications/OpenOffice.app" }
  #- { name: gimp, path: "/Applications/GIMP.app" }
  #- { name: pycharm-ce, path: "/Applications/PyCharm CE.app" }
  #- { name: spectacle, path: "/Applications/Spectacle.app" }
  - { name: drawio, path: "/Applications/draw.io.app" }
  #- { name: krita, path: "/Applications/krita.app" }
  #- { name: obs, path: "/Applications/OBS.app" }
  #- { name: moonlight, path: "/Applications/Moonlight.app" }
  - { name: zoom, path: "/Applications/zoom.us.app" }
  - { name: discord, path: "/Applications/Discord.app" }
  - { name: google-drive, path: "/Applications/Google Drive.app" }
  - { name: vlc, path: "/Applications/VLC.app" }
  #- { name: iina, path: "/Applications/Iina.app" }
  #- { name: background-music, path: "/Applications/Background Music.app" }
  - { name: spotify, path: "/Applications/Spotify.app" }
  #- { name: sweet-home3d, path: "/Applications/Sweet Home 3D.app" }

#pip_packages:
#  - { name: ansible, path: "{{ pip_bin }}/ansible" }
#  - { name: awscli, path: "{{ pip_bin }}/aws" }

# supports .zip and .dmg
app_packages:
  # - { name: iTerm2, app: "iTerm", url: https://iterm2.com/downloads/stable/iTerm2-3_3_2.zip } # brew install iterm2
  # - { name: Atom, app: "Atom", url: https://github.com/atom/atom/releases/download/v1.40.1/atom-mac.zip } # brew install atom
  # - { name: Chrome, app: "Google Chrome", url: https://dl.google.com/chrome/mac/stable/GCEA/googlechrome.dmg } # brew install google-chrome

