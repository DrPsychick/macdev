---

# roles
role_ssh: yes
role_pip: yes
role_brew: yes
role_app: no

# files and templates:
# overwrite: replace file on target, if it exists
# shell (OBSOLETE): source file in .bashrc/.zshrc
# source=(interactive|login): source file in "interactive" = .bashrc/.zshrc or "login" = .profile/.zprofile

# files you want to copy to the target
files:
  - { name: "gitconfig-example", path: "$HOME/.gitconfig-example", overwrite: true }

# templates you want to copy to the target
templates:
  - { name: "bashrc-example", path: "$HOME/.bashrc-example", overwrite: true }
  - { name: "bash_aliases-example", path: "$HOME/.bash_aliases-example", overwrite: true, source: "interactive" }

# instead of copying a file or template, you can define aliases one by one
shell_aliases:
  - { name: "localdev", cmd: "(cd ~/YOUR_MACDEV_DIRECTORY; ansible-playbook macdev.yml)" }

brew_packages:
  - { name: python, path: "{{ brew_bin }}/python3" }
  - { name: pwgen, path: "{{ brew_bin }}/pwgen" }
  - { name: jq, path: "{{ brew_bin }}/jq" }
  - { name: gnupg, path: "{{ brew_bin }}/gpg" }
  #- { name: bash-completion, path: /usr/local/etc/profile.d/bash_completion.sh }
  - { name: kubernetes-cli, path: "{{ brew_bin }}/kubectl" }
  - { name: kubectx, path: "{{ brew_bin }}/kubectx" }
  - { name: hub, path: "{{ brew_bin }}/hub" }
  - { name: go, path: "{{ brew_bin }}/go" }
  #- { name: go@1.12, path: /usr/local/Cellar/go@1.12 }
  - { name: pinentry-mac, path: "{{ brew_bin }}/pinentry-mac" }
  - { name: node, path: "{{ brew_bin }}/node" }
  - { name: telegraf, path: "{{ brew_bin }}/telegraf" }
  - { name: mtr, path: "{{ brew_sbin }}/mtr" }
  - { name: smartmontools, path: "{{ brew_bin }}/smartctl" }
  #- { name: glances, path: "{{ brew_bin }}/glances" }
  #- { name: ask-cli, path: "{{ brew_bin }}/ask" }
  - { name: zsh, path: "{{ brew_bin }}/zsh" }
  - { name: zsh-syntax-highlighting, path: /usr/local/share/zsh-syntax-highlighting }
  - { name: zsh-autosuggestions, path: /usr/local/share/zsh-autosuggestions }

brew_cask_packages:
  - { name: docker, path: /Applications/Docker.app }
  - { name: iterm2, path: /Applications/iTerm.app }
  - { name: google-chrome, path: /Applications/Google Chrome.app }
  - { name: atom, path: /Applications/Atom.app }
  #- { name: postman, path: /Applications/Postman.app }
  #- { name: slack, path: /Applications/Slack.app }
  #- { name: macpass, path: /Applications/MacPass.app }
  #- { name: openoffice, path: /Applications/OpenOffice.app }
  #- { name: gimp, path: /Applications/Gimp-2.10.app }
  #- { name: pycharm-ce, path: "/Applications/PyCharm CE.app" }
  #- { name: spectacle, path: "/Applications/Spectacle.app" }
  #- { name: drawio, path: "/Applications/draw.io.app" }
  #- { name: krita, path: "/Applications/krita.app" }
  #- { name: obs, path: "/Applications/OBS.app" }
  #- { name: moonlight, path: "/Applications/Moonlight.app" }
  #- { name: zoom, path: "/Applications/zoom.us.app" }
  #- { name: discord, path: "/Applications/Discord.app" }
  #- { name: google-backup-and-sync, path: "/Applications/Backup and Sync.app" }

pip_packages:
  - { name: ansible, path: "{{ pip_bin }}/ansible" }
  - { name: awscli, path: "{{ pip_bin }}/aws" }

# supports .zip and .dmg
app_packages:
  # - { name: iTerm2, app: "iTerm", url: https://iterm2.com/downloads/stable/iTerm2-3_3_2.zip } # brew install iterm2
  # - { name: Atom, app: "Atom", url: https://github.com/atom/atom/releases/download/v1.40.1/atom-mac.zip } # brew install atom
  # - { name: Chrome, app: "Google Chrome", url: https://dl.google.com/chrome/mac/stable/GCEA/googlechrome.dmg } # brew install google-chrome

