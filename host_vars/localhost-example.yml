---

# roles
role_ssh: yes
# role_sys requires sudo
role_sys: no
role_cfg: no
role_ansible: yes
role_pip: no
role_brew: yes
role_app: no

## system configuration (requires sudo)
system:
#  # set ComputerName, HostName and NetBIOS Name
#  hostname: example
  # sudo systemsetup -help
  systemsetup:
#    - { key: "-setrestartfreeze", value: "on" }
#    - { key: "-setdisplaysleep", value: "10" }
  loginwindow:
#    - { key: "AdminHostInfo", value: "HostName" } # shows host name and info on login screen
#    - { key: "GuestEnabled", value: "0" }
  generic:
#    - { domain: "/Library/Preferences/com.apple.loginwindow", key: "AdminHostInfo", string: "HostName" }
#    - { domain: "/Library/Preferences/com.apple.loginwindow", key: "GuestEnabled", bool: false }

## user configuration (must be run per user)
config:
  # domain = NSGlobalDomain
  global:
#    - { key: "InitialKeyRepeat", int: 15 }
#    - { key: "KeyRepeat", int: 1 }
  generic:
#    - { domain: "com.apple.desktopservices", key: "DSDontWriteNetworkStores", bool: true }
  # domain = com.apple.finder
  finder:
    # available views: `icnv`, `clmv`, `Flwv`, `Nlsv`
    - { key: "FXPreferredViewStyle", string: "Nlsv" }
  # domain = com.apple.dock
  dock:
    # https://github.com/mathiasbynens/dotfiles/blob/c886e139233320e29fd882960ba3dd388d57afd7/.macos#L356
#    - { key: "magnification", int: 1 }
#    - { key: "tilesize", int: 32 }
#    - { key: "largesize", int: 128 }
#    - { key: "autohide", int: 1 }
    # hot corners: tl = top-left, br = bottom-right
#    - { key: "wvous-tl-corner", int: 5 }
#    - { key: "wvous-tl-modifier", int: 0 }
#    - { key: "wvous-tr-corner", int: 11 }
#    - { key: "wvous-tr-modifier", int: 0 }
#    - { key: "wvous-bl-corner", int: 3 }
#    - { key: "wvous-bl-modifier", int: 0 }
#    - { key: "wvous-br-corner", int: 2 }
#    - { key: "wvous-br-modifier", int: 0 }

## user files and templates:
# overwrite: replace file on target, if it exists
# source=(interactive|login): source file for "interactive" session = .bashrc/.zshrc or "login" session = .profile/.zprofile

# files you want to copy to the target
files:
#  - { name: "gitconfig-example", path: "$HOME/.gitconfig-example", overwrite: true }

# templates you want to copy to the target
templates:
#  - { name: "bashrc-example", path: "$HOME/.bashrc-example", overwrite: true }
#  - { name: "bash_aliases-example", path: "$HOME/.bash_aliases-example", overwrite: true, source: "interactive" }

# instead of copying a file or template, you can define aliases one by one
shell_aliases:
  - { name: "updatemac", cmd: "(cd ~/YOUR_MACDEV_DIRECTORY; {{ 'echo \"password for sudo:\"; sudo echo;' if role_sys }} ansible-playbook macdev.yml)" }

ansible_collections:
  - { name: community.general }
  # see https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file
  #- { name: community.docker, version: "=1.9.0" }
  #- { name: community.kubernetes, source: "" }

# TODO: at this time, only ONE user can control brew packages
brew_packages:
  - { name: python, path: "{{ brew_bin }}/python3" }
  - { name: pwgen, path: "{{ brew_bin }}/pwgen" }
  - { name: jq, path: "{{ brew_bin }}/jq" }
  - { name: gnupg, path: "{{ brew_bin }}/gpg" }
  #- { name: bash-completion, path: /usr/local/etc/profile.d/bash_completion.sh }
  - { name: kubernetes-cli, path: "{{ brew_bin }}/kubectl" }
  - { name: kubectx, path: "{{ brew_bin }}/kubectx" }
  - { name: hub, path: "{{ brew_bin }}/hub" }
  - { name: go, path: "{{ brew_bin }}/go" }
  #- { name: go@1.12, path: /usr/local/Cellar/go@1.12 }
  - { name: pinentry-mac, path: "{{ brew_bin }}/pinentry-mac" }
  - { name: node, path: "{{ brew_bin }}/node" }
  - { name: telegraf, path: "{{ brew_bin }}/telegraf" }
  - { name: mtr, path: "{{ brew_sbin }}/mtr" }
  - { name: smartmontools, path: "{{ brew_bin }}/smartctl" }
  #- { name: glances, path: "{{ brew_bin }}/glances" }
  #- { name: ask-cli, path: "{{ brew_bin }}/ask" }
  - { name: zsh, path: "{{ brew_bin }}/zsh" }
  - { name: zsh-syntax-highlighting, path: /usr/local/share/zsh-syntax-highlighting }
  - { name: zsh-autosuggestions, path: /usr/local/share/zsh-autosuggestions }

brew_cask_packages:
  - { name: iterm2, path: /Applications/iTerm.app }
  - { name: google-chrome, path: /Applications/Google Chrome.app }
  #- { name: docker, path: /Applications/Docker.app }
  #- { name: atom, path: /Applications/Atom.app }
  #- { name: postman, path: /Applications/Postman.app }
  #- { name: slack, path: /Applications/Slack.app }
  #- { name: macpass, path: /Applications/MacPass.app }
  #- { name: openoffice, path: /Applications/OpenOffice.app }
  #- { name: gimp, path: /Applications/Gimp-2.10.app }
  #- { name: pycharm-ce, path: "/Applications/PyCharm CE.app" }
  #- { name: spectacle, path: "/Applications/Spectacle.app" }
  #- { name: drawio, path: "/Applications/draw.io.app" }
  #- { name: krita, path: "/Applications/krita.app" }
  #- { name: obs, path: "/Applications/OBS.app" }
  #- { name: moonlight, path: "/Applications/Moonlight.app" }
  #- { name: zoom, path: "/Applications/zoom.us.app" }
  #- { name: discord, path: "/Applications/Discord.app" }
  #- { name: google-drive, path: "/Applications/Google Drive.app" }

#pip_packages:
#  - { name: ansible, path: "{{ pip_bin }}/ansible" }
#  - { name: awscli, path: "{{ pip_bin }}/aws" }

# supports .zip and .dmg
app_packages:
  # - { name: iTerm2, app: "iTerm", url: https://iterm2.com/downloads/stable/iTerm2-3_3_2.zip } # brew install iterm2
  # - { name: Atom, app: "Atom", url: https://github.com/atom/atom/releases/download/v1.40.1/atom-mac.zip } # brew install atom
  # - { name: Chrome, app: "Google Chrome", url: https://dl.google.com/chrome/mac/stable/GCEA/googlechrome.dmg } # brew install google-chrome

