---

- name: Load system paths from user profile
  lineinfile:
    dest: $HOME/.profile
    regexp: "^[#]?source /etc/profile"
    line: "source /etc/profile"
    create: yes
  #remote_user: "{{ ansible_user_id }}"

- name: Add aliases to .profile
  lineinfile:
    dest: $HOME/.profile
    regexp: "^[#]?alias {{ item.name }}=.*"
    line: "alias {{ item.name }}='{{ item.cmd }}'"
  with_items: "{{ shell_aliases }}"
  when: shell_aliases[0] is defined # must be a non-empty list

- name: Check for existing files without overwrite
  stat: path={{ item.path }}
  with_items: "{{ files }}"
  when: files[0] is defined and item.overwrite != true
  register: file
  failed_when: file.stat.exists

- name: Copy files
  copy: src={{ item.name }} dest={{ item.path }} owner={{ ansible_user_id }} group={{ user_group }} mode=0755
  with_items: "{{ files }}"
  when: files[0] is defined

# fails if a file exists that should not be overwritten
- name: Check for existing template files without overwrite
  stat: path={{ item.path }}
  with_items: "{{ templates }}"
  when: templates[0] is defined and item.overwrite != true 
  register: template
  failed_when: template.stat.exists

- name: Copy templates
  template: src={{ item.name }} dest={{ item.path }} owner={{ ansible_user_id }} group={{ user_group }} mode=0755
  with_items: "{{ templates }}"
  when: templates[0] is defined

- name: Load files in shell environment (.profile)
  lineinfile:
    dest: $HOME/.profile
    regexp: "^[#]?source {{ item.path|replace('$', '\\$') }}"
    line: "source {{ item.path }}"
  with_items: "{{ files }}"
  when: files[0] is defined and item.shell

- name: Load templates in shell environment (.profile)
  lineinfile:
    dest: $HOME/.profile
    regexp: "^[#]?source {{ item.path|replace('$', '\\$') }}"
    line: "source {{ item.path }}"
  with_items: "{{ templates }}"
  when: templates[0] is defined and item.shell


