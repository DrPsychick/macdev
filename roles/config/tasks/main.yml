---
- name: Check vars
  debug: msg="`config` is defined"
  failed_when: config is not defined

- name: Global configuration
  shell: |
    curr=$(defaults read NSGlobalDomain {{ item.key }})
    if [ "$curr" != "{{ item.value }}" ]; then
      defaults write NSGlobalDomain {{ item.key }} -{{ item.type }} {{ item.value }}
      echo "done"
    fi
  with_items: "{{ config.global }}"
  register: global_config
  when: config.global is defined
  changed_when: global_config.stdout == "done"

- name: Generic configuration
  shell: |
    curr=$(defaults read {{ item.domain }} {{ item.key }})
    if [ "$curr" != "{{ item.value }}" ]; then
      defaults write {{ item.domain }} {{ item.key }} -{{ item.type }} "{{ item.value }}"
      echo "done"
    fi
  with_items: "{{ config.generic }}"
  register: generic_config
  when: config.generic is defined and item.domain is defined
  changed_when: generic_config.stdout == "done"

- name: Configure Finder
  shell: |
    curr=$(defaults read com.apple.finder {{ item.key }})
    if [ "$curr" != "{{ item.value }}" ]; then
      defaults write com.apple.finder {{ item.key }} -{{ item.type }} {{ item.value }}
      echo "done"
    fi
  with_items: "{{ config.finder }}"
  register: finder_config
  when: config.finder is defined
  changed_when: finder_config.stdout == "done"

- name: Restart Finder
  shell: killall Finder
  when: finder_config is changed

- name: Configure Dock
  shell: |
    curr=$(defaults read com.apple.dock {{ item.key }})
    if [ "$curr" != "{{ item.value }}" ]; then
      defaults write com.apple.dock {{ item.key }} -{{ item.type }} {{ item.value }}
      echo "done"
    fi
  with_items: "{{ config.dock }}"
  register: dock_config
  when: config.dock is defined
  changed_when: dock_config.stdout == "done"

- name: Restart Dock
  shell: killall Dock
  when: dock_config is changed
